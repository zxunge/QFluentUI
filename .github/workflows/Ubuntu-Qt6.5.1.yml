name: Ubuntu-Qt6.5.1
on: 
  workflow_dispatch:
  push:
    paths:
      - '*.txt'
      - '*.bat'
      - '*.sh'
      - '3rdparty/**'
      - 'code/**'
      - 'config/**'
      - 'FluControls/**'
      - 'FluExamples/**'
      - 'FluIconTool/**'
      - 'FluUtils/**'
      - 'FluWinGallery/**'
      - 'res/**'
      - 'StyleSheet/**'
      - '.github/workflows/Ubuntu-Qt6.5.1.yml'
  pull_request:
    paths:
      - '*.txt'
      - '*.bat'
      - '*.sh'
      - '3rdparty/**'
      - 'code/**'
      - 'config/**'
      - 'FluControls/**'
      - 'FluExamples/**'
      - 'FluIconTool/**'
      - 'FluUtils/**'
      - 'FluWinGallery/**'
      - 'res/**'
      - 'StyleSheet/**'
      - '.github/workflows/Ubuntu-Qt6.5.1.yml'
      
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        qt_ver: [6.5.1]
        qt_arch: [gcc_64]
    env:
      targetName: FluWinGallery
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          cache: ${{steps.cache-qt.outputs.cache-hit}}
          arch: ${{ matrix.qt_arch }}
          modules: 'qt5compat qtmultimedia qtshadertools qtimageformats qt3d qtscxml qtcharts'
      
      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3
        with:
          version: 1.10.2
          
      - name: Install GL library
        run: sudo apt-get install -y libxcb-cursor0 libgl1-mesa-dev libxcb1-dev libgtk-3-dev libxkbcommon-x11-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-sync-dev  libxcb-render-util0-dev libxcb-shm0-dev
        
      - name: Install libfuse2
        run: sudo apt install libfuse2
        
      - name: install QT linux deploy
        uses: miurahr/install-linuxdeploy-action@v1
        with:
          plugins: qt appimage
        
      - name: Build & Package
        run: |
          ninja --version
          cmake --version
          mkdir build
          cd build
          cmake -DCMAKE_MESSAGE_LOG_LEVEL=STATUS -DCMAKE_PREFIX_PATH=/home/runner/work/FluentUI/Qt/${{ matrix.qt_ver }}/gcc_64 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -GNinja ..
          cmake --build . --target all --config Release --parallel
          cmake --build . --target package

      - name: New Release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/FluGalleryWin64Msvc.zip
          asset_name: ${{ env.targetName }}_${{  github.ref_name }}_${{ matrix.os }}_Qt${{ matrix.qt_ver }}.zip
          tag: ${{ github.ref }}
          overwrite: true
